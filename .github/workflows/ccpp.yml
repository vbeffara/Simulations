name: C/C++ CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # cxx: [g++, clang++] # problem building TBB with clang
        cxx: [g++]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Conan
        uses: conan-io/setup-conan@v1
        with:
          cache_packages: True

      - name: Install Debian dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            pkg-config cmake libgtk-3-dev libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev \
            libxau-dev libxaw7-dev clang libxkbfile-dev libxmuu-dev libxres-dev libxss-dev libxv-dev \
            libxxf86vm-dev libxcb-glx0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev \
            libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev \
            libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-cursor-dev libxcb-dri2-0-dev \
            libxcb-dri3-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev \
            libxcb-util-dev libxcb-util0-dev libglu1-mesa-dev
          uv python install
          uv sync

      - name: Install Conan dependencies
        run: |
          conan create conan/fplll.py --build=missing
          conan install . --build=missing --output-folder=build

      - name: configure
        env:
          CXX: ${{ matrix.cxx }}
          CMAKE_POLICY_VERSION_MINIMUM: 3.5
        run: |
          (cd build ; cmake .. -G Ninja -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake" -DCMAKE_BUILD_TYPE=Release)

      - name: make
        run: ninja -C build

      - name: tests
        run: xvfb-run -a build/catch2/catch2
