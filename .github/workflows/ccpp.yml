name: C/C++ CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # cxx: [g++, clang++] # problem building TBB with clang
        cxx: [g++]

    steps:
      - uses: actions/checkout@v2

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            pkg-config cmake libfftw3-dev libdocopt-dev libboost-all-dev libcairo2-dev libeigen3-dev \
            libfplll-dev libmsgsl-dev libgtk-3-dev libspdlog-dev libtbb-dev libyaml-cpp-dev \
            libfltk1.3-dev libmpc-dev libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev \
            libxau-dev libxaw7-dev clang libxkbfile-dev libxmuu-dev libxres-dev libxss-dev libxv-dev \
            libxxf86vm-dev libxcb-glx0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev \
            libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev \
            libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-cursor-dev libxcb-dri2-0-dev \
            libxcb-dri3-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev \
            libxcb-util-dev libxcb-util0-dev
          uv python install
          uv sync

      - name: configure
        env:
          CXX: ${{ matrix.cxx }}
        run: |
          export CMAKE_POLICY_VERSION_MINIMUM=3.5
          uv run conan profile detect
          uv run conan create conan/fplll.py --build=missing
          uv run conan install . --output-folder=build --build=missing
          (cd build ; cmake .. -G Ninja -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake" -DCMAKE_BUILD_TYPE=Release)

      - name: make
        run: ninja -C build

      - name: tests
        run: xvfb-run -a build/catch2/catch2
